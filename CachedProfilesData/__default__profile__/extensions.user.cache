{"input":{"location":{"$mid":1,"fsPath":"/var/www/html/extensions/extensions.json","external":"file:///var/www/html/extensions/extensions.json","path":"/var/www/html/extensions/extensions.json","scheme":"file"},"mtime":1732860207513,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.95.3","productDate":"2024-11-15T19:35:09.428Z","productCommit":"912a7a9d89f560d1a204caf205833db0850e7b4b","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"devsense.profiler-php-vscode","uuid":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e"},"manifest":{"name":"profiler-php-vscode","displayName":"PHP Profiler","description":"Support for PHP (Xdebug) profiling files and inspecting them.","icon":"icons/profiler-icon.png","version":"1.53.16379","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"pricing":"Trial","license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Testing","Debuggers","Other","Visualization"],"keywords":["php","xdebug","profiler","profile","php tools","cachegrind","tools"],"activationEvents":["onCommand:phpprofiler.openfile","onCommand:phpprofiler.loadprofile","onCustomEditor:phpprofiler.cachegrind"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php"},{"id":"cachegrind","filenamePatterns":["cachegrind.out.*.gz"]}],"configuration":{"type":"object","title":"PHP Profiler","properties":{"phpprofiler.hotpath.treshold":{"type":"number","default":1,"markdownDescription":"(`0`..`100`) Value specifies minimum time (_in percent_) so the line in source code will be highlighted as hot-path."}}},"commands":[{"category":"PHP Profiler","title":"Open Profile File (Xdebug Profiling Output)","command":"phpprofiler.openfile"},{"category":"PHP Profiler","title":"Load CacheGrind Profile (from Xdebug)","command":"phpprofiler.loadprofile","enablement":"false"}],"taskDefinitions":[],"keybindings":[],"debuggers":[],"walkthroughs":[],"customEditors":[{"viewType":"phpprofiler.cachegrind","displayName":"CacheGrind (from Xdebug)","selector":[{"filenamePattern":"cachegrind.out.*.gz"}]}]},"capabilities":{"virtualWorkspaces":{"supported":true,"description":"Virtual workspaces are supported as long as you can open a remote file."},"untrustedWorkspaces":{"supported":true,"description":"All functionality is enabled as long as you can open a remote file."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","prepare":"npm run -S generate-resource && pwsh ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && pwsh ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../common/node && npm i && cd ../../Profiler","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","readline":"1.3.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vsce":"^2.7.0","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-languageserver-textdocument":"^1.0.7","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/uuid":"^9.0.8","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.8.3","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/var/www/html/extensions/devsense.profiler-php-vscode-1.53.16379-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1732859356734,"pinned":false,"source":"gallery","id":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.composer-php-vscode","uuid":"eed2a934-7bb6-4a5b-a29d-353077efd839"},"manifest":{"name":"composer-php-vscode","displayName":"Composer","description":"All-in-One composer integration, quick actions, commands, automatic installation, tasks, code lenses, diagnostics, and composer.json IntelliSense.","icon":"icons/composer-icon.png","version":"1.53.16379","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Snippets","Linters","Other","Visualization"],"keywords":["php","composer","schema","validation","commands","tools","php tools","packagist","codelens"],"activationEvents":["workspaceContains:composer.json"],"main":"./out/src/extension","contributes":{"languages":[{"id":"json"}],"configuration":{"type":"object","title":"Composer","properties":{"composer.workingPath":{"markdownDescription":"Root path for the `composer.json` and `vendor` folders. By default, it's the root of the workspace.","scope":"resource","type":["string","null"],"default":null},"composer.bin":{"markdownDescription":"Optional. Full path to user's `composer.phar` file, i.e. `/usr/bin/composer`. If not specified, `composer.phar` is either located in known directories or downloaded automatically.","scope":"window","type":["string","null"],"default":null},"composer.inlayVersionEnabled":{"markdownDescription":"Enable actual installed package version as an inlay hint right in `composer.json`. Enabled by default.","scope":"window","type":"boolean","default":true},"composer.diagnosticsEnabled":{"markdownDescription":"Enable or disable abandoned packages diagnostics. Enabled by default.","scope":"window","type":"boolean","default":true}}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://raw.githubusercontent.com/composer/composer/master/res/composer-schema.json"}],"commands":[{"category":"Composer","title":"update local 'composer.phar' ...","command":"composer.download"},{"category":"Composer","title":"install","command":"composer.install"},{"category":"Composer","title":"update","command":"composer.update"},{"category":"Composer","title":"create-project ...","command":"composer.create-project"},{"category":"Composer","title":"require package ...","command":"composer.require"},{"category":"Composer","title":"require dev package ...","command":"composer.require-dev"},{"category":"Composer","title":"remove package ...","command":"composer.remove"},{"category":"Composer","title":"about","command":"composer.about"},{"category":"Composer","title":"archive ...","command":"composer.archive"},{"category":"Composer","title":"clear-cache","command":"composer.clear-cache"},{"category":"Composer","title":"fund","command":"composer.fund"},{"category":"Composer","title":"licenses","command":"composer.licenses"},{"category":"Composer","title":"check-platform-reqs","command":"composer.check-platform-reqs"},{"category":"Composer","title":"outdated","command":"composer.outdated"},{"category":"Composer","title":"search ...","command":"composer.search"},{"category":"Composer","title":"reinstall","command":"composer.reinstall"},{"category":"Composer","title":"run-script ...","command":"composer.run-script"},{"category":"Composer","title":"show --tree","command":"composer.show-tree"}],"taskDefinitions":[{"type":"composer","properties":{"command":{"type":"string","enum":["init","install","update","require","remove","bump","reinstall","check-platform-reqs","global","search","show","outdated","browse","suggests","fund","depends","prohibits","validate","status","self-update","config","create-project","dump-autoload","clear-cache","licenses","run-script","exec","diagnose","archive","audit","help"],"format":"[a-z\\-]+","description":"The composer command to run."},"args":{"type":"array","description":"Additional arguments for the composer command."}},"required":["command"]}],"keybindings":[],"debuggers":[],"walkthroughs":[]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, composer packages can't be installed or updated."},"untrustedWorkspaces":{"supported":true,"description":"The extension may require workspace trust to use 'php' 3rd party tool, or to navigate to PHP documentation website, or to navigate to the product website."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","prepare":"npm run -S generate-resource && pwsh ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && pwsh ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../common/node && npm i && cd ../../Composer","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vsce":"^2.7.0","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-languageserver-textdocument":"^1.0.7","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/var/www/html/extensions/devsense.composer-php-vscode-1.53.16379-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1732859356734,"pinned":false,"source":"gallery","id":"eed2a934-7bb6-4a5b-a29d-353077efd839","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.phptools-vscode","uuid":"93916db4-e944-4c74-b68e-47f2834e9e93"},"manifest":{"name":"phptools-vscode","displayName":"PHP","description":"All-in-One PHP support - IntelliSense, Debug, Formatter, Code Lenses, Code Fixes, Linting, Refactoring, PHPUnit Tests, Web Server, and more.","icon":"icons/phptools-icon.png","version":"1.53.16379","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.70.0","node":"^8.11.0"},"categories":["Programming Languages","Debuggers","Snippets","Linters","Formatters","Testing"],"keywords":["php","debug","autocomplete","refactoring","testing","completion","codeactions","format","IntelliSense","Xdebug","test","phpunit","composer","profiler","server","built-in"],"extensionPack":["devsense.intelli-php-vscode","devsense.composer-php-vscode","devsense.profiler-php-vscode"],"activationEvents":["onDebugResolve:php","onDebugDynamicConfigurations:php","onLanguage:php","workspaceContains:**/*.php","workspaceContains:phpunit.*"],"main":"./out/src/extension","extensionKind":["workspace"],"contributes":{"languages":[{"id":"php","aliases":["PHP","php"]},{"id":"phpx","aliases":["PHPX","phpx"],"configuration":"./syntaxes/phpx.configuration.json"}],"grammars":[{"language":"phpx","scopeName":"source.phpx","path":"./syntaxes/phpx.json"},{"scopeName":"html-blade.injection","path":"./syntaxes/blade.injection.json","injectTo":["text.html.php"],"embeddedLanguages":{"meta.embedded.inline.phpx":"phpx"}}],"semanticTokenScopes":[{"language":"php","scopes":{"keyword":["keyword.other.phpdoc.php"]}}],"breakpoints":[{"language":"php"}],"configuration":[{"title":"PHP","properties":{"php.executablePath":{"description":"Default path to the 'php' executable.","type":["string","array","null"],"scope":"application"},"php.format.autoimport":{"markdownDeprecationMessage":"Use `#php.completion.autoimport#` instead."},"php.format.autoimport-docblock":{"markdownDeprecationMessage":"Use `#php.completion.autoimport-docblock#` instead."},"php.format.exclude":{"markdownDescription":"Exclude document format and format-on-type in specific files and folders. Specify a glob pattern or array of glob patterns.","default":null,"type":["null","string","array"],"examples":["cache/**"],"scope":"window"},"php.completion.parameters":{"markdownDescription":"Automatically insert parentheses `()` after completion of functions, and trigger parameter hints.","type":"string","default":"parentheses","enum":["none","parentheses","parameters"],"markdownEnumDescriptions":["Do not insert parentheses and do not trigger parameters completion.","Insert parentheses `()` after the function completion and place cursor inside them.","Insert parentheses and parameters snippet."],"scope":"window"},"php.completion.docblock":{"markdownDescription":"Generate DocBlock comment automatically by typing `/**` above a declaration.","type":"boolean","default":true},"php.completion.showNamespaceLabel":{"type":"boolean","default":true,"markdownDescription":"Show item namespace in the completion list.","scope":"window"},"php.completion.showParameters":{"type":"boolean","default":false,"markdownDescription":"Show function signature in the completion list.","scope":"window"},"php.completion.showDeprecated":{"type":["boolean","string"],"default":true,"enum":[true,false,"hide","showNormal","showStrikethrough"],"markdownDescription":"Customize deprecated symbols in the completion list.","scope":"window"},"php.completion.autoimport":{"markdownDescription":"Completion of types, functions, and constants outside of the current namespace scope.","type":"string","default":"auto-import","enum":["auto-import","fqn","none","hide"],"markdownEnumDescriptions":["Add corresponding `use` alias upon completion.","Fully qualifies the name upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible symbols in code completion."],"scope":"window"},"php.completion.autoimport-docblock":{"markdownDescription":"Completion of type names outside of the current namespace scope, when completing inside a PHP doc block (e.g. in `@param` tag).","type":"string","default":"fqn","enum":["fqn","auto-import","none","hide","default"],"markdownEnumDescriptions":["Fully qualifies the name upon completion.","Add corresponding `use` alias upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible types in code completion.","Use the setting from `#php.completion.autoimport#` option."],"scope":"window"},"php.completion.namingConvention":{"type":"string","markdownDescription":"Naming convention for generated member names.","enum":["camelCase","PascalCase","snake_case"],"default":"camelCase","scope":"window"},"php.completion.getterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the getter function. This is inserted using code action over a private class properties to generate `getter` function.\n\nBy default it's similar to:\n\n```php\nreturn {PROPERTY};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.completion.setterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the setter function. This is inserted using code action over a private class properties to generate `setter` function.\n\nBy default it's similar to:\n\n```php\n{PROPERTY} = ${NAME};\nreturn {THIS};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.sortUses.caseSensitive":{"type":"boolean","markdownDescription":"Whether sorting of `use` statements is case sensitive. Case sensitive sorting puts upper case letters on top.","scope":"window","default":false},"php.inlayHints.insertOnDoubleClick":{"type":"boolean","markdownDescription":"The inlay hint will be inserted to the code on double-clicking on it. Enabled by default.","scope":"application","default":true},"php.inlayHints.parameters.enabled":{"type":"boolean","default":true,"markdownDescription":"Display inlay parameter names.\n```phpx\nfoo( /*name:*/ x ); \n```\n","scope":"window"},"php.inlayHints.parameters.suppressNameMatchingValue":{"type":"boolean","default":false,"markdownDescription":"Suppress inlay parameter name hint, when the parameter name matches the argument value.\n```phpx\n// foo( name: $name ); # suppress 'name:' because the argument looks the same\nfoo( $name );\n```\n","scope":"window"},"php.inlayHints.parameters.byReference":{"type":"boolean","default":true,"markdownDescription":"Display inlay `&` sign in front of arguments passed by reference.\n```phpx\nfoo( /*&*/$x ); // show '&' because '$x' is passed by reference \n```\n","scope":"window"},"php.inlayHints.types.return":{"type":["boolean","string"],"enum":[true,false,"named"],"enumItemLabels":["Enable","Disable","Named Functions Only"],"markdownEnumDescriptions":["**Enable** for all functions without a type hint","**Disable**","Only for global functions and methods. Disabled for anonymous and arrow functions."],"default":true,"markdownDescription":"Display inlay function return type inferred from the function code.\n```phpx\nfunction foo()/*: void*/ {\n```\n","scope":"window"},"php.inlayHints.types.variable":{"type":"boolean","default":false,"markdownDescription":"Display assigned variable type.\n```phpx\n$value/*: int*/ = strlen('str');\n```\n","scope":"window"},"php.inlayHints.types.lambdaParameter":{"type":"boolean","default":true,"markdownDescription":"Display infered lambda parameter type if possible.\n```phpx\n$collection->map(function ( /*string*/ $value) {\n```\n","scope":"window"},"php.inlayHints.types.suppressVariableFromLiteral":{"type":"boolean","default":true,"markdownDescription":"Suppress inlay hint for obvious variable assignments.\n```phpx\n$value/*: int*/ = 1;\n```\n","scope":"window"},"php.docblock.colorMode":{"type":"string","default":null,"scope":"application","enum":[null,"fallback","simple"],"enumItemLabels":["default","fallback","simple"],"markdownEnumDescriptions":["Colorize PHPDoc tags, variables, and all the types using corresponding colors.","Does not add semantic colors to PHPDoc blocks. Colors are managed by Visual Studio Code or other extensions.","Colorize tags, variables, and types with solid colors."]},"php.docblock.packageSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet at file beginning. Example:\n```json\n\"php.docblock.packageSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"\n}\n```"},"php.docblock.classSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a class/interface/trait/enum. Example:\n```json\n\"php.docblock.classSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"}\n```"},"php.docblock.propertySnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a property. Example:\n```json\n\"php.docblock.propertySnippet\": {\n  \"@author\": \"${name:John}\"\n}\n```"},"php.docblock.functionSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","@throws":false}],"markdownDescription":"DocBlock snippet above a function. Example:\n```json\n\"php.docblock.functionSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@throws\": false\n}\n```"},"php.docblock.variableSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"singleline":true}],"markdownDescription":"DocBlock snippet above a variable assignment. Example:\n```json\n\"php.docblock.variableSnippet\": {\n  \"singleline\": true\n}\n```"},"php.docblock.getterSetterSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","summary":false}],"markdownDescription":"Snippet for DocBlocks generated using getter/setter code action"},"php.hover.parameters":{"type":"boolean","default":true,"markdownDescription":"Show function parameters description in the mouse hover tool-tip.","scope":"window"},"php.hover.parametersFullName":{"type":"boolean","default":false,"markdownDescription":"Show fully qualified parameter type name in function tool-tip.","scope":"window"},"php.hover.documentation":{"type":"boolean","default":true,"markdownDescription":"If available, show symbol documentation link in the mouse hover tool-tip.","scope":"window"},"php.hover.fullname":{"type":"boolean","default":false,"markdownDescription":"Show full name of symbols, including the full class name.","scope":"window"},"php.hover.containingClass":{"type":"boolean","default":true,"markdownDescription":"Show containing class name of class members.","scope":"window"},"php.linkedEditing.variables":{"markdownDescription":"When `#editor.linkedEditing#` setting is enabled, this option specifies whether to apply linked edits to local variable names.","default":false,"type":"boolean","scope":"window"},"php.workspace.includePath":{"description":"Paths containing additional PHP declarations. Separated with semi-colon.","type":["string","array"],"scope":"window"},"php.workspace.shortOpenTag":{"markdownDescription":"Enable or disable parsing inside `<?` tag. Default value is `\"auto\"` so short open tags will be _enabled_ if there is no `<?xml` tag.","type":"string","scope":"window","default":"auto","enum":["auto","true","false"],"markdownEnumDescriptions":["Enable short open tags unless there is `<?xml` tag.","Enable PHP code inside short open tags.","Disable PHP code inside short open tags."]},"php.executables":{"markdownDescription":"Defines PHP profiles as a user defined name and a `php` binary path.\nExample: `\"php.executables\": { \"v7.4\": \"/usr/bin/php7.4\" }`","examples":[{"v7.4":"/usr/bin/php7.4"}],"type":"object","scope":"application"},"php.version":{"markdownDescription":"A PHP version or a profile name defined in `#php.executables#`.","type":"string","scope":"window"},"php.codeLens.enabled":{"description":"Enable/disable code lenses in PHP files.","type":"boolean","default":true,"scope":"application"},"php.problems.scope":{"markdownDescription":"What workspace folders get analyzed for problems.\n\nDefault is `\"opened\"` which gets problems for opened documents only.\n\n_Note, **fatal errors** and **parse errors** are always reported across the entire workspace._","type":"string","default":"opened","enum":["none","opened","all"],"markdownEnumDescriptions":["Workspace won't be analysed.","Only opened documents will be analyzed for problems.","Entire workspace will be analyzed continuously. (PREMIUM)"],"scope":"window"},"php.problems.exclude":{"markdownDescription":"Path patterns to be ignored from reporting problems. Value can be set to `true` to ignore all problems or a comma separated list of specific problem codes.\n\n_See [Problems Configuration](https://docs.devsense.com/vscode/problems#phpproblemsexclude) for more details._\n\n\n_Example:_\n```json\n\"php.problems.exclude\": {\n  \"/\": [406],\n  \"vendor/\": true,\n}\n```","type":["object","null"],"examples":[{"/":[406],"vendor/":true}],"default":null,"scope":"window"},"php.problems.excludeGitIgnore":{"markdownDescription":"Do not report problems in files specified in `.gitignore` file.","type":"boolean","default":false,"scope":"window"},"php.problems.workspaceAnalysis":{"description":"Deprecated. Enable full workspace-wide analysis. Enabled by default.","type":["boolean"],"enum":[true,false],"default":true,"scope":"window","markdownDeprecationMessage":"Use `#php.problems.scope#` instead."},"php.cache.enableOnlineCache":{"markdownDescription":"For better performance, IntelliSense for _composer_ packages may be fetched from a cache server.\n\nThis improves workspace indexing after installing or updating composer packages.","type":"boolean","default":true,"scope":"machine"},"php.cache.location":{"markdownDescription":"Full path for local IntelliSense cache for _composer_ packages.","type":["string","null"],"default":null,"scope":"machine"},"php.stubs":{"markdownDescription":"Array of extension names to be included in the built-in IntelliSense, the localized manual, and code analysis. By default all the standard PHP extensions are included.\n\nExamples:\n\n```json\n{\n  \"php.stubs\": [\"*\", \"com\", \"pcntl\", \"xdebug\"]\n}\n```\n\nList of possible values:\n\n- `\"*\"` includes the standard set of extensions.\n- `\"all\"` includes all the available extensions.\n- `com`\n- `pcntl`\n- `zip`\n- `zlib`\n- ...","default":["*"],"type":"array","scope":"window","examples":[["*","com"],["all"]]},"php.debug.port":{"markdownDescription":"Default Xdebug port or array of ports. This value is used when `port` is not specified in `launch.json` settings. Usually 9000 or 9003.","default":[9003,9000],"type":["array","integer"],"scope":"window"},"phpTools.license":{"markdownDeprecationMessage":"This setting has been deprecated, you may delete it. Use _Command Palette_, the command `PHP Tools: Activate License`.","description":"The license fingerprint. (deprecated)","type":["string","null"],"scope":"application"},"phpTools.suppressPremiumFeatures":{"markdownDescription":"Most of the premium features will be disabled and user won't be bothered with related messages or blocked code actions.","scope":"machine","type":"boolean","default":false},"phpTools.language":{"description":"Language of PHP Tools IntelliSense.","type":["string",null],"enum":["en","de","es","fr","ja","pt","ru","zh",null],"default":null,"scope":"application"},"php.highlight-todo.enable":{"markdownDescription":"Enable highligting of to-do comments (`@todo`, `// TODO`, or `# TODO`). Enabled by default.","type":"boolean","default":true,"scope":"window"},"php.highlight-todo.style":{"markdownDescription":"The style of to-do decoration. See [ThemableDecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationRenderOptions) for details.","type":"object","default":{"backgroundColor":"#eecc00"},"scope":"window"},"phpunit.command":{"markdownDescription":"Custom command to for running and debugging tests. Use variables `${phpunit}`, `${phpunitxml}`, `${phpunitargs}`, `${php}`, `${phpargs}`, `${cwd}`.\n\nExample:\n\n`ddev exec phpunit -c ${phpunitxml} ${phpunitargs}`","type":"string","default":"\"${php}\" ${phpargs} \"${phpunit}\" ${phpunitargs}","examples":["\"${php}\" ${phpargs} \"${phpunit}\" ${phpunitargs}","ddev exec phpunit ${phpunitargs}"],"scope":"window"},"phpunit.phpunit":{"description":"PHPUnit binary to be used to run and debug the tests. It can be either full path or path relative to the workspace root.\n\nExample: `./vendor/bin/phpunit` or `\"phpunit\"`.","type":"string","default":null,"scope":"window"},"phpunit.enableAutomaticRefresh":{"markdownDescription":"Watch for `.php` and `phpunit` changes and refresh tests view automatically. Enabled by default.","type":"boolean","default":true,"scope":"window"},"phpunit.preTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed before a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"},"phpunit.postTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed after a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"}}},{"title":"Code Style","properties":{"php.format.codeStyle":{"markdownDescription":"Base code formatting style. This setting is used as a default for all code formatting rules, unless overwritten with specific code formatting rules.","type":["string"],"enum":["PER","PSR-2","PSR-12","Allman","K&R","PHP Tools","Laravel","WordPress","Drupal","Joomla","Off"],"default":"PSR-12","scope":"window"}}},{"title":"Formatting (BlankLines)","properties":{"php.format.rules.blankLinesAfterClass":{"markdownDescription":"Defines the number of blank lines after a class declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterClassBody":{"markdownDescription":"Defines the number of blank lines after a class body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterFunction":{"markdownDescription":"Defines the number of blank lines after a function declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterMethod":{"markdownDescription":"Defines the number of blank lines after a method declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterNamespace":{"markdownDescription":"Defines the number of blank lines after a namespace declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterUseStatements":{"markdownDescription":"Defines the number of blank lines after 'use' statements.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeClass":{"markdownDescription":"Defines the number of blank lines before a class declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeClassBody":{"markdownDescription":"Defines the number of blank lines before a class body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeFunction":{"markdownDescription":"Defines the number of blank lines before a function declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeFunctionBody":{"markdownDescription":"Defines the number of blank lines before a function body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeMethod":{"markdownDescription":"Defines the number of blank lines before a method declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeMethodBody":{"markdownDescription":"Defines the number of blank lines before a method body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeNamespace":{"markdownDescription":"Defines the number of blank lines before a namespace declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeUseStatements":{"markdownDescription":"Defines the number of blank lines before 'use' statements.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.maxBlankLines":{"markdownDescription":"Defines the maximum number of consecutive blank lines allowed in the code.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"}}},{"title":"Formatting (Conversions)","properties":{"php.format.rules.addCommaAfterLastArrayElement":{"markdownDescription":"Automatically adds a comma after the last array element if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.addCommaAfterLastCallParameter":{"markdownDescription":"Automatically adds a comma after the last function call parameter if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.addCommaAfterLastDeclParameter":{"markdownDescription":"Automatically adds a comma after the last function or method declaration parameter if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.booleanConstantCasing":{"markdownDescription":"Defines casing for `true` and `false` constants.\n* `uppercase` - Changes the casing to upper case\n* `lowercase` - Changes the casing to lower case\n* `keep` - Keeps the original casing\n\n\n```phpx\n#lowercase     #uppercase\ntrue, false    TRUE, FALSE\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["uppercase","lowercase","keep"],"enumItemLabels":["UpperCase","LowerCase","Keep"],"default":null,"scope":"window"},"php.format.rules.nullConstantCasing":{"markdownDescription":"Defines casing for `null` constant.\n* `uppercase` - Changes the casing to upper case\n* `lowercase` - Changes the casing to lower case\n* `keep` - Keeps the original casing\n\n\n```phpx\n#lowercase    #uppercase\nnull          NULL\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["uppercase","lowercase","keep"],"enumItemLabels":["UpperCase","LowerCase","Keep"],"default":null,"scope":"window"}}},{"title":"Formatting (Indentation)","properties":{"php.format.rules.indentBraces":{"markdownDescription":"Gets value indicating whether to indent braces\n\n```phpx\n#Enabled             #Disabled\nfunction foo()       function foo()\n    {                {\n    echo \"Hello\";        echo \"Hello\";\n    }                }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (NewLines)","properties":{"php.format.rules.catchOnNewLine":{"markdownDescription":"Place `catch` on a new line.\n\n```phpx\n#Enabled    #Disabled\ntry         try\n{           {\n}           } catch\ncatch       {\n{           }\n}           finally\nfinally     {\n{           }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.elseOnNewLine":{"markdownDescription":"Place `else` on a new line.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if (true)\n{            {\n}            } else\nelse         {\n{            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.endWithNewLine":{"markdownDescription":"Inserts final newline at the end of a file.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.finallyOnNewLine":{"markdownDescription":"Place `finally` on a new line.\n\n```phpx\n#Enabled    #Disabled\ntry         try\n{           {\n}           }\ncatch       catch\n{           {\n}           } finally\nfinally     {\n{           }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForAnonymousClasses":{"markdownDescription":"Place open brace `{` on a new line for anonymous classes.\n\n```phpx\n#Enabled                                  #Disabled\n$c = new class extends \\Foo implements    $c = new class extends \\Foo implements\n    \\ArrayAccess                              \\ArrayAccess {\n{                                         };\n};\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForBlocks":{"markdownDescription":"Place open brace `{` on a new line for all types of code blocks, except for those controlled by other formatting rules.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if (true) {\n{            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForFunctions":{"markdownDescription":"Place open brace `{` on a new line for methods, functions and constructors.\n\n```phpx\n#Enabled          #Disabled\nfunction foo()    function foo() {\n{                 }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForLambdas":{"markdownDescription":"Place open brace `{` on a new line for lambda functions.\n\n```phpx\n#Enabled                 #Disabled\n$lambda = function ()    $lambda = function () {\n{                        }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForNamespaces":{"markdownDescription":"Place open brace `{` on a new line for namespace declarations.\n\n```phpx\n#Enabled       #Disabled\nnamespace A    namespace A {\n{              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForTypes":{"markdownDescription":"Place open brace `{` on a new line for types.\n\n```phpx\n#Enabled                           #Disabled\nclass X extends \\Foo implements    class X extends \\Foo implements\n    \\ArrayAccess                       \\ArrayAccess {\n{                                  }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (Spacing)","properties":{"php.format.rules.spaceAfterCast":{"markdownDescription":"Insert a space after a cast operator.\n\n```phpx\n#Enabled            #Disabled\n$x = (int) $obj;    $x = (int)$obj;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAfterUnaryNot":{"markdownDescription":"Insert a space after a unary not operator.\n\n```phpx\n#Enabled        #Disabled\n$x = ! $obj;    $x = !$obj;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAroundConcatenation":{"markdownDescription":"Insert a space around concatenation operator.\n\n```phpx\n#Enabled               #Disabled\n$x = $str1 . $str2;    $x = $str1.$str2;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInControlStatements":{"markdownDescription":"Insert a space before colon in control flow blocks.\n\n```phpx\n#Enabled       #Disabled\nif (true) :    if (true):\nendif;         endif;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInReturnType":{"markdownDescription":"Insert a space before colon in a return type\n\n```phpx\n#Enabled                  #Disabled\nfunction foo() : int {    function foo(): int {\n}                         }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInArrowFunctions":{"markdownDescription":"Insert a space before arrow function parentheses.\n\n```phpx\n#Enabled            #Disabled\n$x = fn () => 1;    $x = fn() => 1;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInCalls":{"markdownDescription":"Insert a space before parentheses in method, function and constructor call parentheses.\n\n```phpx\n#Enabled    #Disabled\nfoo ();     foo();\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInControlStatements":{"markdownDescription":"Insert a space before parentheses in control statements.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if(true)\n{            {\n}            }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInDeclarations":{"markdownDescription":"Insert a space before parentheses in method, function and constructor declaration parentheses.\n\n```phpx\n#Enabled           #Disabled\nfunction foo ()    function foo()\n{                  {\n}                  }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinArrayInitilizersParens":{"markdownDescription":"Insert a space within array initializer parentheses.\n\n```phpx\n#Enabled                                      #Disabled\n$x = array( 1 => \"first\", 2 => \"second\" );    $x = array(1 => \"first\", 2 => \"second\");\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBrackets":{"markdownDescription":"Insert a space within brackets.\n\n```phpx\n#Enabled         #Disabled\n$y = $x[ 1 ];    $y = $x[1];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBracketsAroundExpression":{"markdownDescription":"Insert a space within brackets around expression.\n\n```phpx\n#Enabled              #Disabled\n$y = $x[ $i + 1 ];    $y = $x[$i + 1];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCallParens":{"markdownDescription":"Insert a space within method, function and constructor call parentheses.\n\n```phpx\n#Enabled        #Disabled\nfoo( 1, 2 );    foo(1, 2);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCatchParens":{"markdownDescription":"Insert a space within `catch` statement header parentheses.\n\n```phpx\n#Enabled                           #Disabled\ntry { } catch ( Exception ) { }    try { } catch (Exception) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinDeclParens":{"markdownDescription":"Insert a space within method, function and constructor declaration parentheses.\n\n```phpx\n#Enabled                      #Disabled\nfunction foo( $x, $y ) { }    function foo($x, $y) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinExpressionParens":{"markdownDescription":"Insert a space within parentheses around expression.\n\n```phpx\n#Enabled           #Disabled\n$x = ( 1 + 2 );    $x = (1 + 2);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForeachParens":{"markdownDescription":"Insert a space within `foreach` statement header parentheses.\n\n```phpx\n#Enabled                                   #Disabled\nforeach ( $expr as $key => $value ) { }    foreach ($expr as $key => $value) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForParens":{"markdownDescription":"Insert a space within `for` statement header parentheses.\n\n```phpx\n#Enabled                              #Disabled\nfor ( $i = 0; $i < 100; $i++ ) { }    for ($i = 0; $i < 100; $i++) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinIfParens":{"markdownDescription":"Insert a space within `if` statement header parentheses.\n\n```phpx\n#Enabled           #Disabled\nif ( true ) { }    if (true) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinSwitchParens":{"markdownDescription":"Insert a space within `switch` statement header parentheses.\n\n```phpx\n#Enabled             #Disabled\nswitch ( $x ) { }    switch ($x) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinWhileParens":{"markdownDescription":"Insert a space within `while` statement header parentheses.\n\n```phpx\n#Enabled                  #Disabled\nwhile ( $a != $b ) { }    while ($a != $b) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (Wrapping)","properties":{"php.format.rules.alignConsecutiveAssignments":{"markdownDescription":"Automatically align consecutive `=` assignments.\n\n```phpx\n#Enabled       #Disabled\n$a     = 1;    $a = 1;\n$bbb   = 2;    $bbb = 2;\n$ccccc = 3;    $ccccc = 3;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignConstants":{"markdownDescription":"Automatically align constant declarations\n\n```phpx\n#Enabled              #Disabled\nclass X {             class X {\n    const a   = 1;        const a = 1;\n    const bb  = 2;        const bb = 2;\n    const ccc = 3;        const ccc = 3;\n}                     }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignEnumCases":{"markdownDescription":"Automatically align assigned values in backed enumerations\n\n```phpx\n#Enabled             #Disabled\nenum X {             enum X {\n    case a   = 1;        case a = 1;\n    case bb  = 2;        case bb = 2;\n    case ccc = 3;        case ccc = 3;\n}                    }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignMatchArmBodies":{"markdownDescription":"Automatically align the bodies (results) within `match` expression arms\n\n```phpx\n#Enabled                        #Disabled\nmatch ($day) {                  match ($day) {\n    'Monday'    => 'Work',          'Monday' => 'Work',\n    'Tuesday'   => 'Tacos',         'Tuesday' => 'Tacos',\n    'Wednesday' => 'Waffles'        'Wednesday' => 'Waffles'\n};                              };\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignProperties":{"markdownDescription":"Automatically align properties declarations\n\n```phpx\n#Enabled                   #Disabled\nclass X {                  class X {\n    var       $a   = 1;        var $a = 1;\n    public    $bb  = 2;        public $bb = 2;\n    protected $ccc = 3;        protected $ccc = 3;\n}                          }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersAlignKeyValuePairs":{"markdownDescription":"Automatically align `=>` operators.\n\n```phpx\n#Enabled              #Disabled\n$x = [                $x = [\n    1    => 'foo',        1 => 'foo',\n    1234 => 'bar'         1234 => 'bar'\n];                    ];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersNewLineAfterLastElement":{"markdownDescription":"Place a new line after the last element when wrapping.\n\n```phpx\n#Enabled    #Disabled\n$x = [      $x = [\n    1,          1,\n    2           2];\n];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersNewLineBeforeFirstElement":{"markdownDescription":"Place a new line before the first array element when wrapping.\n\n```phpx\n#Enabled    #Disabled\n$x = [      $x = [1,\n    1,          2\n    2       ];\n];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersWrap":{"markdownDescription":"Defines wrapping behavior for array initializers.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the array initializer is split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.callParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` when wrapping.\n\n```phpx\n#Enabled    #Disabled\nfoo(        foo(1,\n    1,          2\n    2       );\n);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` when wrapping.\n\n```phpx\n#Enabled    #Disabled\nfoo(        foo(\n    1,          1,\n    2           2);\n);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersWrap":{"markdownDescription":"Defines wrapping behavior for method, function and constructor call parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the call arguments are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.chainedMethodCallsSemicolonOnNewLine":{"markdownDescription":"Place `;` on a new line after the last element in the chained method call when wrapping.\n\n```phpx\n#Enabled       #Disabled\n$x->aaa()      $x->aaa()\n    ->bbb()        ->bbb();\n;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.chainedMethodCallsWrap":{"markdownDescription":"Defines wrapping behavior for chained method calls.\n* `Off` - No wrapping is applied\n* `Always` - When this option is selected each method call is placed on a new line and properly indented.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.declCompactEmptyBody":{"markdownDescription":"Transform empty body into `{}` and keep it at the same line as a previous symbol, separated by single space.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y\n) {}             )\n                 {\n                 }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declKeepRightParenAndOpenBraceOnOneLine":{"markdownDescription":"Keep the right closing parenthesis `)` of a function or method declaration header on the one line as opening brace of the body `{`.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y\n) {              )\n}                {\n                 }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` of function or method declaration header when wrapping.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo($x,\n    $x,              $y\n    $y           ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` of a function or method declaration header when wrapping.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersWrap":{"markdownDescription":"Defines wrapping behavior for method or function declaration parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration parameter is placed on a new line and properly indented if the arguments are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.forStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `for` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled         #Disabled\nfor(             for($i = 0;\n    $i = 0;          $i < 100;\n    $i < 100;        $i++\n    $i++         ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `for` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled         #Disabled\nfor(             for($i = 0;\n    $i = 0;          $i < 100;\n    $i < 100;        $i++\n    $i++         ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementWrap":{"markdownDescription":"Defines wrapping behavior for `for` statement.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item in `for` statement is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.groupUseNewLineBeforeFirstDeclaration":{"markdownDescription":"Place a new line before first group `use` declaration if the list of declarations is split across multiple lines.\n\n```phpx\n#Enabled               #Disabled\nuse Vendor\\pkg\\ns\\{    use Vendor\\pkg\\ns\\{ns1\\A,\n    ns1\\A,                 ns2\\B,\n    ns2\\B,             };\n};\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.groupUseWrap":{"markdownDescription":"Defines wrapping behavior for group `use` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration in group `use` list is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.ifStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `if` or `elseif` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nif(         if(true\n    true    ) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.ifStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `if` or `elseif` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nif(         if(\n    true        true) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.implementsListWrap":{"markdownDescription":"Defines wrapping behavior for `implements` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each interface in `implements` list is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.indentHeredoc":{"markdownDescription":"Ensures heredoc and nowdoc content lines are indented one level past the declaration's scope.\n\n```phpx\n#Enabled                 #Disabled\n\nfunction example() {     function example() {\n    $var = <<<HEREDOC        $var = <<<HEREDOC\n        content          content\n    HEREDOC;             HEREDOC;\n}                        }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.inlineHeredoc":{"markdownDescription":"Place heredoc and nowdoc on the same line as declaring variable\n\n```phpx\n#Enabled                  #Disabled\n$var = <<<HEREDOC         $var =\n    This is a heredoc.    <<<HEREDOC\nHEREDOC;                      This is a heredoc.\n                          HEREDOC;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepClassesOnOneLine":{"markdownDescription":"Clasess are kept on one line.\n\n```phpx\n#Enabled       #Disabled\nclass x { }    class x {\n               }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepControlStatementsOnOneLine":{"markdownDescription":"Control statements are kept on one line.\n\n```phpx\n#Enabled           #Disabled\nif ($x) return;    if ($x)\n                   \treturn;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepFunctionsOnOneLine":{"markdownDescription":"Functions and methods are kept on one line.\n\n```phpx\n#Enabled                        #Disabled\nfunction foo() { return 1; }    function foo() {\n                                    return 1;\n                                }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.newLineAfterImplements":{"markdownDescription":"Place a new line after `implements` in type declaration if the list of interfaces is split across multiple lines.\n\n```phpx\n#Enabled              #Disabled\nclass X implements    class X implements A,\n    A,                    B,\n    B,                    C\n    C                 {\n{                     }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `switch` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nswitch(     switch($x\n    $x      ) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `switch` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nswitch(     switch(\n    $x          $x) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `while` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled       #Disabled\nwhile(         while($x == 2\n    $x == 2    ) {\n) {            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `while` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled       #Disabled\nwhile(         while(\n    $x == 2        $x == 2) {\n) {            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}}],"configurationDefaults":{"php.suggest.basic":false,"php.validate.enable":false,"files.associations":{"*.embeddedhtml":"html"},"[php]":{"editor.linkedEditing":true}},"menus":{"editor/title/run":[{"command":"phptools.debug.runScript","when":"resourceLangId == php && !inDiffEditor && !virtualWorkspace && shellExecutionSupported","group":"navigation@0"},{"command":"phptools.debug.debugScript","when":"resourceLangId == php && !inDiffEditor && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"commands":[{"command":"phptools.activate","category":"PHP Tools","title":"Activate License","icon":"$(unlock)"},{"command":"phptools.requesttrial","category":"PHP Tools","title":"Begin Free Trial ...","icon":"$(unlock)","enablement":"!phptools.activated"},{"command":"phptools.releasenotes","category":"PHP Tools","title":"About ...","icon":"$(notebook)"},{"command":"phptools.clearVendorCache","category":"PHP Tools","title":"Clear /vendor/ cache."},{"command":"phptools.stubs","category":"PHP","title":"Workspace Stubs"},{"command":"phptools.todo.search","category":"PHP","title":"Search todo ...","icon":"$(search)"},{"command":"phptools.formatFiles","category":"PHP","title":"Format Multiple Files"},{"command":"phptools.selectPhpVersion","title":"Select PHP version ...","category":"PHP","icon":"$(versions)","enablement":"editorLangId==php && !isWeb"},{"command":"phptools.selectLanguage","title":"PHP Manual Language ...","category":"PHP","icon":"%(comments-view-icon)"},{"command":"phptools.problems.scope","title":"Background Code Analysis","category":"PHP","icon":"%(alert)"},{"command":"phptools.importClass","category":"PHP","title":"Import class ...","enablement":"phptools.importClass"},{"command":"phptools.fqnClass","category":"PHP","title":"FQN class ...","enablement":"phptools.importClass"},{"command":"phptools.debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.startListen","title":"Start Listening for Xdebug","shortTitle":"Listen for Xdebug","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.debugScript","title":"Debug PHP script","category":"Debug (PHP)","enablement":"editorLangId==php && debuggersAvailable && !inDebugMode","icon":"$(debug-alt)"},{"command":"phptools.debug.runScript","title":"Run PHP Script","category":"Debug (PHP)","enablement":"editorLangId == php","icon":"$(play)"}],"keybindings":[{"command":"phptools.debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"!inDebugMode && debugConfigurationType=='php'"},{"command":"phptools.debug.startWithStopOnEntry","key":"F11","mac":"F11","when":"!inDebugMode && debugConfigurationType=='php'"}],"debuggers":[{"type":"php","label":"PHP (Xdebug)","enableBreakpointsFor":{"languageIds":["php"]},"configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"externalConsole":{"type":"boolean","description":"Launch debug target in external console.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceRoot}"},"envfile":{"type":"string","markdownDescription":"Path to `.env` file. Environment variables will be merged into the process environment variables.","examples":[".env"]},"phpVersion":{"type":"string","markdownDescription":"PHP version or profile name defined in `#php.executables#`"},"runtimeExecutable":{"type":"string","description":"Absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.","default":"php"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"port":{"type":["integer","array"],"description":"Port on which to listen for Xdebug"},"serverSourceRoot":{"type":"string","description":"Deprecated: The source root when debugging a remote host","deprecationMessage":"Property serverSourceRoot is deprecated, please use pathMappings to define a server root."},"localSourceRoot":{"type":"string","description":"Deprecated: The source root on this machine that is the equivalent to the serverSourceRoot on the server.","deprecationMessage":"Property localSourceRoot is deprecated, please use pathMappings to define a local root."},"pathMappings":{"type":"object","default":{},"description":"A mapping of server paths to local paths."},"exclude":{"type":"array","items":"string","description":"Glob patterns specifying paths to exclude from debugging.","default":["**/vendor/**/*.php"]},"skipEntryPaths":{"type":"array","items":"string","description":"Glob patterns to skip if the initial entry file is matched."},"ignoreExceptions":{"type":"array","items":"string","description":"Exception class names or patterns that should be ignored, supporting '*' and '**' wildcards."},"log":{"type":"boolean","description":"If true, will log all communication between VS Code and the adapter"},"noDebug":{"type":"boolean","description":"If true, starts the process without debugging. False by default ('debug' mode enabled)."},"trigger":{"type":"string","description":"If set, only requests with `XDEBUG_TRIGGER` GET/POST/COOKIE or ENV variable equal to this value, will be debugged. By default, every request is being debugged. Example: \"trigger\": \"Start\", so only requests to http://localhost?XDEBUG_TRIGGER=Start will initiate debugging."},"profile":{"type":"boolean","description":"If true, enables Xdebug 'profile' mode. Disabled by default."},"openProfile":{"type":"boolean","description":"Override profile output dir and open the profiling result after the debug sessions stops."},"dbgpProxy":{"type":"object","properties":{"enable":{"type":"boolean","description":"If True, will connect to DBGp proxy configured in this section","default":false},"host":{"type":"string","description":"The host address where the proxy is located. It's usually same as web server, but it's doesn't have to be.","default":"127.0.0.1"},"port":{"type":"number","description":"The port where the proxy server is listening.","default":9001},"ideKey":{"type":"string","description":"The Xdebug IDE Key used to register the VS CODE. If not set, the current user name is used instead."}}},"maxConnections":{"type":"number","description":"Maximum number of simultaneous debug sessions.","default":3}}}},"languages":["php"],"configurationSnippets":[{"label":"PHP: Launch built-in server","description":"Launches PHP's built-in development server and starts debugging.","body":{"name":"Launch built-in server","type":"php","request":"launch","runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch & Profile built-in server","description":"Launches PHP's built-in development server and starts profiling requests.","body":{"name":"Launch & Profile built-in server","type":"php","request":"launch","noDebug":true,"profile":true,"runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch current script in console","description":"Launches currently opened PHP document as a console application.","body":{"name":"Launch current script in console","type":"php","request":"launch","program":"^\"\\${file}\"","cwd":"^\"\\${fileDirname}\"","externalConsole":false,"port":9003}},{"label":"PHP: Listen for Xdebug","description":"Starts debugging by waiting for an incoming Xdebug connection from a remote server.","body":{"name":"Listen for Xdebug","type":"php","request":"launch","port":[9003,9000]}}],"initialConfigurations":[{"name":"Launch built-in server and debug","type":"php","request":"launch","runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}},{"name":"Debug current script in console","type":"php","request":"launch","program":"${file}","cwd":"${fileDirname}","externalConsole":false,"port":9003},{"name":"Listen for Xdebug","type":"php","request":"launch","port":9003}]}],"taskDefinitions":[{"type":"php","properties":{"file":{"type":"string","description":"Path to the .php file to be executed."},"args":{"type":["array","string"],"description":"Script file arguments."},"phpVersion":{"type":"string","description":"PHP version or profile name defined in 'php.executables'"}},"required":["file"]}]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, not all files might be loaded and resolving and finding references might be limited."},"untrustedWorkspaces":{"supported":true}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/platform-MacOS%20%7C%20Linux%20%7C%20Win-green.svg","href":"https://www.devsense.com/download#vscode","description":"PHP Tools Download"},{"url":"https://img.shields.io/badge/php-5.4%20--%205.6%20%7C%207.0%20--%208.4-8892BF.svg?logo=php","href":"https://docs.devsense.com/en/vscode/configuration","description":"Supported PHP Versions"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en/download/vscode","description":"PHP Tools for VS Code Changelog"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","generate-formatsettings":"pwsh ./scripts/generate-formatsettings.ps1","precompile":"npm run -S generate-resource && npm run -S generate-formatsettings","postbuild":"pwsh ./scripts/postbuild.ps1","vscode:prepublish":"npm run -S precompile && pwsh ./scripts/prepublish.ps1 && npm run -S esbuild-base -- --minify && npm run -S esbuild-uninstall -- --minify && npm run -S postbuild","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node --main-fields=module,main","esbuild-uninstall":"esbuild ./src/uninstall.ts --bundle --outfile=out/src/uninstall.js --external:vscode --format=cjs --platform=node","compile":"dotnet publish ../Devsense.PHP.LanguageServer --ignore-failed-sources --output out/server && npm run -S esbuild-base -- --sourcemap && npm run -S esbuild-uninstall && npm run -S postbuild","postinstall":"cd ../common/node && npm i && cd ../../PhpTools.VsCode","vscode:uninstall":"node ./out/src/uninstall","build-tests":"tsc -p ./test/","pretest":"npm run compile && npm run -S build-tests","test":"node ./out/test/runTest.js"},"dependencies":{"@vscode/debugadapter":"^1.54.0","@vscode/debugprotocol":"^1.54.0","@vscode/vsce":"^2.7.0","applicationinsights":"^1.8.10","crypto":"^1.0.1","escape-string-regexp":"^1.0.5","highlight.js":"^11.6.0","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","markdown-it":"^13.0.1","minimatch":"^5.1.0","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vscode-html-languageservice":"^5.1.2","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-nls":"^3.2.2","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/chai":"4.3.9","@types/chai-as-promised":"^7.1.8","@types/glob":"^8.0.0","@types/minimatch":"^5.1.0","@types/mocha":"^10.0.1","@types/node":"^10.17.60","@types/vscode":"^1.70.0","@vscode/debugadapter":"^1.56.0","@vscode/debugadapter-testsupport":"^1.64.0","@vscode/test-electron":"^2.2.1","chai":"^4.3.10","chai-as-promised":"^7.1.1","esbuild":"^0.14.48","mocha":"^10.1.0","source-map-support":"^0.5.12","ts-node":"^10.9.2","tsconfig-paths":"^4.2.0","typescript":"^4.7.4","uglify-js":"^3.16.1","vscode-uri":"^3.0.8"}},"location":{"$mid":1,"path":"/var/www/html/extensions/devsense.phptools-vscode-1.53.16379-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1732859356734,"pinned":false,"source":"gallery","id":"93916db4-e944-4c74-b68e-47f2834e9e93","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"junstyle.php-cs-fixer","uuid":"b06b65b2-6ea9-4045-b166-54aa63205261"},"manifest":{"name":"php-cs-fixer","displayName":"php cs fixer","description":"PHP CS Fixer extension for VS Code, php formatter, php code beautify tool, format html","version":"0.3.21","publisher":"junstyle","author":"junstyle","license":"ISC","homepage":"https://github.com/junstyle/vscode-php-cs-fixer","icon":"logo.png","repository":{"type":"git","url":"https://github.com/junstyle/vscode-php-cs-fixer.git"},"engines":{"vscode":"^1.56.0"},"categories":["Formatters","Linters","Other"],"activationEvents":["onLanguage:php"],"main":"./index","contributes":{"commands":[{"command":"php-cs-fixer.fix","title":"php-cs-fixer: fix this file","when":"!inOutput && editorFocus && editorLangId == php"},{"command":"php-cs-fixer.fix2","title":"php-cs-fixer: fix","when":"explorerResourceIsFolder"},{"command":"php-cs-fixer.diff","title":"php-cs-fixer: diff","when":"resourceLangId == php"},{"command":"php-cs-fixer.showOutput","title":"php-cs-fixer: showOutput"}],"configuration":{"title":"PHP CS Fixer","type":"object","properties":{"php-cs-fixer.executablePath":{"type":"string","default":"php-cs-fixer","description":"Points to the php-cs-fixer exectuable, eg: win: php-cs-fixer.bat, other: php-cs-fixer; or points to php-cs-fixer.phar path, eg: /full/path/of/php-cs-fixer.phar"},"php-cs-fixer.executablePathWindows":{"type":"string","description":"Points to the php-cs-fixer exectuable on Windows environments, eg: php-cs-fixer.bat. Useful if you are sharing settings among different environments."},"php-cs-fixer.rules":{"type":["string","object"],"default":"@PSR12","description":"PHP CS Fixer rules (such as @PSR1, @PSR2, @PSR12, @PER-CS, @Symfony...). Support json formatted value. @see: https://github.com/FriendsOfPHP/PHP-CS-Fixer"},"php-cs-fixer.config":{"type":"string","default":".php-cs-fixer.php;.php-cs-fixer.dist.php;.php_cs;.php_cs.dist","description":"config file (.php-cs-fixer.php, .php-cs-fixer.dist.php, .php_cs, .php_cs.dist or custom defined) can place in workspace root folder or .vscode folder or any other folder (full path)"},"php-cs-fixer.allowRisky":{"type":"boolean","default":false,"description":"Are risky fixers allowed?"},"php-cs-fixer.pathMode":{"type":"string","enum":["override","intersection"],"default":"override","description":"--path-mode can be override or intersection, intersection only works on explorer context menu action, not works for current focused file. detail see:https://github.com/FriendsOfPHP/PHP-CS-Fixer#usage"},"php-cs-fixer.ignorePHPVersion":{"type":"boolean","default":false,"description":"set env:PHP_CS_FIXER_IGNORE_ENV, to ignore tip `minimum and maximum php version`"},"php-cs-fixer.exclude":{"type":"array","default":[],"description":"--path-mode=intersection has a conflict with auto format on save, so you can use `exclude option` instead of. glob strings."},"php-cs-fixer.onsave":{"type":"boolean","default":false,"description":"Execute PHP CS Fixer on save"},"php-cs-fixer.autoFixByBracket":{"type":"boolean","default":false,"description":"when press down the key } auto fix the code in the brackets {}"},"php-cs-fixer.autoFixBySemicolon":{"type":"boolean","default":false,"description":"when press down the key ; auto fix the code at the current line"},"php-cs-fixer.formatHtml":{"type":"boolean","default":false,"description":"whether formatting html at the same time"},"php-cs-fixer.documentFormattingProvider":{"type":"boolean","default":true,"description":"register php document formatting provider, right mouse-click context menu, show as 'Format Document', after changing this option you should restart your editor."},"php-cs-fixer.tmpDir":{"type":"string","default":"","description":"the dir for tmp files, make sure you have 'writable' permission on this dir."},"php-cs-fixer.lastDownload":{"type":"integer","default":1,"description":"last automatically download php-cs-fixer time, if you want to disable auto download for latest php-cs-fixer.phar set to 0. just for automatically installed user."}}},"menus":{"explorer/context":[{"when":"resourceLangId == php","command":"php-cs-fixer.fix2","group":"php-cs-fixer"},{"when":"explorerResourceIsFolder","command":"php-cs-fixer.fix2","group":"php-cs-fixer"},{"when":"resourceLangId == php","command":"php-cs-fixer.diff","group":"php-cs-fixer"}]}},"scripts":{"vscode:prepublish":"npm run build","esbuild-base":"esbuild ./src/index.ts --bundle --outfile=index.js --external:vscode --format=cjs --platform=node","build":"npm run -S esbuild-base -- --minify","watch":"npm run -S esbuild-base -- --sourcemap --watch"},"dependencies":{"anymatch":"^3.1.3","htmlparser2":"^4.1.0","js-beautify":"^1.14.8","node-downloader-helper":"^1.0.19","php-parser":"^3.1.5"},"devDependencies":{"@types/node":"^16.11.43","@types/vscode":"1.56.0","esbuild":"^0.21.4"}},"location":{"$mid":1,"path":"/var/www/html/extensions/junstyle.php-cs-fixer-0.3.21-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"junstyle","metadata":{"installedTimestamp":1732859359731,"pinned":false,"source":"gallery","id":"b06b65b2-6ea9-4045-b166-54aa63205261","publisherId":"5ff10d01-354e-489d-b787-61450e806841","publisherDisplayName":"junstyle","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"lkrms.pretty-php","uuid":"e3d923a6-c7db-4cca-9582-07cdaa8ef24d"},"manifest":{"name":"pretty-php","displayName":"pretty-php","description":"The opinionated PHP code formatter","version":"0.4.79","publisher":"lkrms","engines":{"vscode":"^1.74.0"},"keywords":["php","formatter","beautifier","pretty","opinionated","deterministic","determinism"],"categories":["Formatters"],"repository":{"type":"git","url":"https://github.com/lkrms/vscode-pretty-php.git"},"activationEvents":["onLanguage:php"],"main":"./out/extension.js","contributes":{"commands":[{"command":"pretty-php.format","title":"Format PHP","enablement":"resourceLangId == php"},{"command":"pretty-php.formatWithoutNewlines","title":"Format PHP without Preserving Newlines","enablement":"resourceLangId == php"},{"command":"pretty-php.createConfigFile","title":"Create .prettyphp or prettyphp.json"}],"menus":{"explorer/context":[{"command":"pretty-php.createConfigFile","group":"pretty-php@1"}]},"configuration":{"title":"pretty-php","properties":{"pretty-php.formatting.sortImportsBy":{"description":"Set the sort order for consecutive alias/import statements","type":"string","enum":["off","none","name","depth"],"markdownEnumDescriptions":["Don't sort or group imports","Group imports by type without changing order","Order imports by name\n\n```php\n<?php\nuse A;\nuse B\\C\\E;\nuse B\\C\\F\\G;\nuse B\\C\\F\\{H, I};\nuse B\\C\\F\\J;\nuse B\\D;\n```","Order imports by name, depth-first\n\n```php\n<?php\nuse B\\C\\F\\{H, I};\nuse B\\C\\F\\G;\nuse B\\C\\F\\J;\nuse B\\C\\E;\nuse B\\D;\nuse A;\n```"],"default":"depth","order":9},"pretty-php.formatting.simplifyStrings":{"description":"Normalise escape sequences in strings, and replace single- and double-quoted strings with the most readable and economical syntax","type":"boolean","default":true,"order":10},"pretty-php.formatting.simplifyNumbers":{"description":"Normalise integers and floats","type":"boolean","default":true,"order":11},"pretty-php.formatting.declarationSpacing":{"description":"Normalise vertical spacing between declarations","type":"boolean","default":true,"order":12},"pretty-php.formatting.heredocIndentation":{"description":"Set the indentation level of heredocs and nowdocs","type":"string","enum":["none","line","mixed","hanging"],"markdownEnumDescriptions":["Do not indent heredocs\n\n```php\n<?php\nfunction f()\n{\n    $a = <<<EOF\nContent\nEOF;\n}\n```","Apply line indentation to heredocs\n\n```php\n<?php\nfunction f()\n{\n    $a = <<<EOF\n    Content\n    EOF;\n}\n```","Apply hanging indentation to inline heredocs\n\n```php\n<?php\n$alpha = <<<EOF\n    Content\n    EOF;\n$bravo =\n    <<<EOF\n    Content\n    EOF;\n```","Always apply hanging indentation to heredocs\n\n```php\n<?php\n$alpha = <<<EOF\n    Content\n    EOF;\n$bravo =\n    <<<EOF\n        Content\n        EOF;\n```"],"default":"mixed","order":13},"pretty-php.formatting.operatorPlacement":{"description":"Place operators before or after newlines when splitting code over multiple lines","type":"string","enum":["mixed","first","last"],"markdownEnumDescriptions":["Place arithmetic operators at the start of the line\n\n```php\n<?php\n$baz =\n    $foo ||\n    $bar;\n$a = ($b\n        / $c)\n    * 100;\n```","Place operators at the start of the line\n\n```php\n<?php\n$baz =\n    $foo\n    || $bar;\n$a = ($b\n        / $c)\n    * 100;\n```","Place operators at the end of the line\n\n```php\n<?php\n$baz =\n    $foo ||\n    $bar;\n$a = ($b /\n        $c) *\n    100;\n```"],"default":"mixed","order":14},"pretty-php.formatting.moveComments":{"markdownDescription":"Move comments if necessary for correct placement of adjacent delimiters and operators\n\n```php\n<?php\n// Disabled:\n[\n    'foo'\n        // comment\n        , 'bar'\n];\n// Enabled:\n[\n    'foo',\n    // comment\n    'bar'\n];\n```","type":"boolean","default":true,"order":16},"pretty-php.formatting.tightDeclarationSpacing":{"description":"Remove blank lines between declarations of the same type where possible","type":"boolean","default":false,"order":18},"pretty-php.formatting.alignment.alignData":{"markdownDescription":"Align consecutive operators and values\n\n```php\n<?php\n$start = [  0, 'first', $foo];\n$end   = [100, 'last',  $bar];\n```","type":"boolean","default":false,"order":20},"pretty-php.formatting.alignment.alignChains":{"markdownDescription":"Align consecutive object operators in the same chain of method calls\n\n```php\n<?php\n$result = $foo->bar()\n              ->baz();\n```","type":"boolean","default":false,"order":21},"pretty-php.formatting.alignment.alignComments":{"markdownDescription":"Align comments beside code\n\n```php\n<?php\n$i = 0;               // index\n$value = Foo::bar();  // value\n```","type":"boolean","default":false,"order":22},"pretty-php.formatting.alignment.alignFn":{"markdownDescription":"Align arrow function expressions with their definitions\n\n```php\n<?php\n$obj->Callback = fn($value) =>\n                     $this->receive($value);\n```","type":"boolean","default":false,"order":23},"pretty-php.formatting.alignment.alignLists":{"markdownDescription":"Align arguments, array elements and other list items with their owners\n\n```php\n<?php\n$obj->method($arg1,\n             $arg2);\n```","type":"boolean","default":false,"order":24},"pretty-php.formatting.alignment.alignTernaryOperators":{"markdownDescription":"Align ternary and null coalescing operators with their expressions\n\n```php\n<?php\n$alpha = $bravo\n             ? $charlie\n             : $delta;\n```","type":"boolean","default":false,"order":25},"pretty-php.formatting.blankBeforeReturn":{"markdownDescription":"Add a blank line before `return` and `yield` statements unless they appear consecutively or at the beginning of a compound statement","type":"boolean","default":false,"order":30},"pretty-php.formatting.strictLists":{"description":"Arrange items in lists horizontally or vertically by replicating the arrangement of the first and second items","type":"boolean","default":false,"order":31},"pretty-php.formatting.preserveOneLineStatements":{"markdownDescription":"Suppress newlines in statements and control structures that start and end on the same line, including individual `case` statements","type":"boolean","default":false,"order":32},"pretty-php.formatting.psr12":{"markdownDescription":"Enforce strict compliance with [PSR-12](https://www.php-fig.org/psr/psr-12/) / [PER Coding Style](https://www.php-fig.org/per/coding-style/) where implemented, ignoring other settings if necessary","type":"boolean","default":false,"order":40},"pretty-php.files.exclude":{"markdownDescription":"Configure glob patterns for files to exclude from formatting, e.g. `**/vendor/**`","type":"array","items":{"type":"string"},"order":50},"pretty-php.formatterArguments":{"markdownDescription":"Pass [additional arguments](https://github.com/lkrms/pretty-php/blob/main/docs/Usage.md) to `pretty-php`","type":"array","items":{"type":"string"},"order":60},"pretty-php.phpPath":{"description":"Path to the PHP executable","type":"string","default":"php","order":61}}},"languages":[{"id":"json","filenames":[".prettyphp"]}],"jsonValidation":[{"fileMatch":[".prettyphp","prettyphp.json"],"url":"./resources/prettyphp-schema.json"}]},"scripts":{"postinstall":"npm run update-phar","postversion":"npm run update-phar","vscode:prepublish":"npm run update-changelog && npm run compile","update-changelog":"scripts/update-changelog.sh","update-phar":"scripts/update-phar.sh && npm run check-phar","check-phar":"scripts/check-phar.sh","compile":"npm run check-phar && tsc -p ./","watch":"npm run check-phar && tsc -watch -p ./","pretest":"npm run compile && npm run lint","lint":"ts-standard"},"dependencies":{"minimatch":"^10.0.1","which":"^3.0.1"},"devDependencies":{"@types/minimatch":"^5.1.2","@types/node":"^18.x","@types/vscode":"^1.74.0","@types/which":"^3.0.0","@vscode/vsce":"^2.21.0","ovsx":"^0.8.3","ts-standard":"^12.0.2","typescript":"^4.9.5"},"icon":"images/pretty-php.png"},"location":{"$mid":1,"path":"/var/www/html/extensions/lkrms.pretty-php-0.4.79-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"lkrms","metadata":{"installedTimestamp":1732859363963,"pinned":false,"source":"gallery","id":"e3d923a6-c7db-4cca-9582-07cdaa8ef24d","publisherId":"d6dc577b-95d4-4a86-aa9e-67878382838d","publisherDisplayName":"lkrms","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"mehedidracula.php-namespace-resolver","uuid":"651dce1f-eda8-4a5b-aa26-0d1266de8ed1"},"manifest":{"name":"php-namespace-resolver","displayName":"PHP Namespace Resolver","description":"Import and expand php namespaces","version":"1.1.9","publisher":"MehediDracula","author":"Mehedi Hassan <MehediDracula@gmail.com>","license":"SEE LICENSE IN LICENSE","engines":{"vscode":"^1.68.0"},"categories":["Other"],"keywords":["php","namespace","class","import","expand"],"galleryBanner":{"color":"#282c34","theme":"dark"},"activationEvents":["onLanguage:php","onCommand:namespaceResolver.import","onCommand:namespaceResolver.importAll","onCommand:namespaceResolver.expand","onCommand:namespaceResolver.sort","onCommand:namespaceResolver.highlightNotImported","onCommand:namespaceResolver.highlightNotUsed","onCommand:namespaceResolver.generateNamespace"],"main":"./src/extension","icon":"images/icon.png","contributes":{"menus":{"editor/context":[{"when":"resourceLangId == php","command":"namespaceResolver.import","alt":"namespaceResolver.import","group":"0_namespace_resolver@1"},{"when":"resourceLangId == php","command":"namespaceResolver.importAll","alt":"namespaceResolver.importAll","group":"0_namespace_resolver@2"},{"when":"resourceLangId == php","command":"namespaceResolver.expand","alt":"namespaceResolver.expand","group":"0_namespace_resolver@3"},{"when":"resourceLangId == php","command":"namespaceResolver.sort","alt":"namespaceResolver.sort","group":"0_namespace_resolver@4"},{"when":"resourceLangId == php","command":"namespaceResolver.highlightNotImported","alt":"namespaceResolver.highlightNotImported","group":"0_namespace_resolver@5"},{"when":"resourceLangId == php","command":"namespaceResolver.highlightNotUsed","alt":"namespaceResolver.highlightNotUsed","group":"0_namespace_resolver@6"},{"when":"resourceLangId == php","command":"namespaceResolver.generateNamespace","alt":"namespaceResolver.generateNamespace","group":"0_namespace_resolver@7"}]},"configuration":{"type":"object","title":"PHP Namespace Resolver extension configuration","properties":{"namespaceResolver.exclude":{"type":"string","default":"**/node_modules/**","description":"Exclude glob pattern while finding files"},"namespaceResolver.showMessageOnStatusBar":{"type":"boolean","default":false,"description":"Show message on status bar instead of notification box"},"namespaceResolver.autoSort":{"type":"boolean","default":true,"description":"Auto sort after imports"},"namespaceResolver.sortOnSave":{"type":"boolean","default":false,"description":"Auto sort when a file is saved"},"namespaceResolver.sortAlphabetically":{"type":"boolean","default":false,"description":"Sort imports in alphabetical order instead of line length"},"namespaceResolver.sortNatural":{"type":"boolean","default":false,"description":"Sort imports using a 'natural order' algorithm"},"namespaceResolver.leadingSeparator":{"type":"boolean","default":true,"description":"Expand class with leading namespace separator"},"namespaceResolver.highlightOnSave":{"type":"boolean","default":false,"description":"Auto highlight not imported and not used when a file is saved"},"namespaceResolver.highlightOnOpen":{"type":"boolean","default":false,"description":"Auto highlight not imported and not used when a file is opened"}}},"commands":[{"title":"Import Class","command":"namespaceResolver.import"},{"title":"Import All Classes","command":"namespaceResolver.importAll"},{"title":"Expand Class","command":"namespaceResolver.expand"},{"title":"Sort Imports","command":"namespaceResolver.sort"},{"title":"Highlight Not Imported Classes","command":"namespaceResolver.highlightNotImported"},{"title":"Highlight Not Used Classes","command":"namespaceResolver.highlightNotUsed"},{"title":"Generate namespace for this file","command":"namespaceResolver.generateNamespace"}],"keybindings":[{"command":"namespaceResolver.import","key":"ctrl+alt+i","when":"editorTextFocus"},{"command":"namespaceResolver.importAll","key":"ctrl+alt+a","when":"editorTextFocus"},{"command":"namespaceResolver.expand","key":"ctrl+alt+e","when":"editorTextFocus"},{"command":"namespaceResolver.sort","key":"ctrl+alt+s","when":"editorTextFocus"},{"command":"namespaceResolver.highlightNotImported","key":"ctrl+alt+n","when":"editorTextFocus"},{"command":"namespaceResolver.highlightNotUsed","key":"ctrl+alt+u","when":"editorTextFocus"},{"command":"namespaceResolver.generateNamespace","key":"ctrl+alt+g","when":"editorTextFocus"}]},"repository":{"type":"git","url":"https://github.com/MehediDracula/PHP-Namespace-Resolver"},"bugs":{"url":"https://github.com/MehediDracula/PHP-Namespace-Resolver/issues"},"dependencies":{"node-natural-sort":"^0.8.6"},"devDependencies":{"@types/vscode":"^1.68.0","@types/node":"16.x"}},"location":{"$mid":1,"path":"/var/www/html/extensions/mehedidracula.php-namespace-resolver-1.1.9-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"MehediDracula","metadata":{"installedTimestamp":1732859367819,"pinned":false,"source":"gallery","id":"651dce1f-eda8-4a5b-aa26-0d1266de8ed1","publisherId":"e6a54efe-9186-460e-b45b-8da24a8b8d5f","publisherDisplayName":"MehediDracula","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.intelli-php-vscode","uuid":"f83b9c6c-24dd-435c-a088-daff1769b0b8"},"manifest":{"name":"intelli-php-vscode","displayName":"IntelliPHP - AI Autocomplete for PHP","description":"AI-assisted development for PHP.","icon":"icons/icon-2.png","version":"0.12.15062","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":true,"pricing":"Trial","license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.70.0","node":"^8.11.0"},"categories":["Programming Languages","Machine Learning","Snippets","Other"],"keywords":["php","ai","tools","php tools","compose"],"activationEvents":["onLanguage:php"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php"}],"configuration":{"type":"object","title":"IntelliPHP","properties":{"intelliphp.inlineSuggestionsEnabled":{"type":"boolean","default":true,"markdownDescription":"Enables or disables AI inline code suggestions. Enabled by default.","scope":"window"}}},"configurationDefaults":{"intelephense.completion.triggerParameterHints":false},"commands":[{"category":"IntelliPHP","title":"About ...","command":"intelliphp.releasenotes","enablement":"true"}],"keybindings":[],"debuggers":[],"walkthroughs":[]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, composer packages can't be installed or updated."},"untrustedWorkspaces":{"supported":true,"description":"The extension may require workspace trust to use 'php' 3rd party tool, or to navigate to PHP documentation website, or to navigate to the product website."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"powershell ../../scripts/Generate-Resource.ps1 -path .","copy-license":"copy ..\\PhpTools.VSCode\\LICENSE.md /Y","precompile":"npm run -S generate-resource && npm run -S copy-license","vscode:prepublish":"npm run -S precompile && powershell ./prepublish.ps1 && npm run -S esbuild-base -- --minify && powershell ./minify.ps1","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","compile":"dotnet publish ../Devsense.IntelliPHP.LanguageServer --ignore-failed-sources --output out/server && npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../lib && npm install && cd ../PhpTools.VsCode","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","highlight.js":"^11.6.0","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","markdown-it":"^13.0.1","minimatch":"^5.1.0","moment":"^2.17.1","node-rsa":"^1.0.7","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-nls":"^3.2.2","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@vscode/vsce":"^2.7.0","@types/mocha":"^10.0.1","@types/node":"^10.17.60","@types/vscode":"^1.70.0","esbuild":"^0.14.48","mocha":"^10.1.0","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/var/www/html/extensions/devsense.intelli-php-vscode-0.12.15062-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1732859356734,"pinned":false,"source":"gallery","id":"f83b9c6c-24dd-435c-a088-daff1769b0b8","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"felixfbecker.php-debug","uuid":"60b4ad61-eb2a-47f3-b361-aa84fb4288ac"},"manifest":{"name":"php-debug","displayName":"PHP Debug","version":"1.22.0","publisher":"felixfbecker","license":"MIT","description":"Debug support for PHP with Xdebug","keywords":["php","debug","xdebug"],"author":{"name":"Felix Becker","email":"felix.b@outlook.com"},"contributors":[{"name":"Damjan Cvetko","email":"damjan.cvetko@gmail.com"}],"engines":{"vscode":"^1.53.0","node":"^14.0.0"},"icon":"images/logo.png","galleryBanner":{"color":"#6682BA","theme":"dark"},"categories":["Debuggers"],"repository":{"type":"git","url":"https://github.com/xdebug/vscode-php-debug.git"},"bugs":{"url":"https://github.com/xdebug/vscode-php-debug/issues"},"dependencies":{"file-url":"^3.0.0","iconv-lite":"^0.6.3","minimatch":"^3.0.4","moment":"^2.29.1","relateurl":"^0.2.7","semver":"^7.3.5","string-replace-async":"^2.0.0","url-relative":"^1.0.0","urlencode":"^1.1.0","vscode-debugadapter":"^1.50.0","vscode-debugprotocol":"^1.50.1","which":"^2.0.2","xmldom":"^0.6.0"},"devDependencies":{"@commitlint/cli":"^13.2.1","@commitlint/config-conventional":"^13.2.0","@types/chai":"4.2.22","@types/chai-as-promised":"^7.1.4","@types/minimatch":"^3.0.5","@types/mocha":"^9.0.0","@types/node":"^14.14.14","@types/relateurl":"^0.2.29","@types/semver":"^7.3.9","@types/urlencode":"^1.1.2","@types/vscode":"^1.53.0","@types/which":"^2.0.1","@types/xmldom":"^0.1.31","chai":"^4.3.4","chai-as-promised":"^7.1.1","husky":"^7.0.2","mocha":"^9.1.3","nyc":"^15.1.0","prettier":"2.4.1","semantic-release":"^17.4.7","semantic-release-vsce":"^3.5.0","tslint":"^5.20.1","tslint-config-prettier":"^1.18.0","typescript":"^4.4.3","vsce":"^1.99.0","vscode-debugadapter-testsupport":"^1.50.0"},"release":{"branches":["main"],"verifyConditions":["semantic-release-vsce","@semantic-release/github"],"prepare":{"path":"semantic-release-vsce","packageVsix":true},"publish":["semantic-release-vsce",{"path":"@semantic-release/github","assets":"*.vsix","addReleases":"bottom"}]},"scripts":{"build":"tsc -p .","watch":"tsc -w -p .","start":"code testproject --extensionDevelopmentPath=.","test":"mocha","cover":"nyc mocha","lint":"npm run tslint && npm run prettier","tslint":"tslint -c tslint.json 'src/**/*.ts'","prettier":"prettier \"**/{*.json,*.yml,.*.yml,*.ts,.prettierrc,*.md}\" --write --list-different","prettier-check":"npm run prettier -- --write=false","semantic-release":"semantic-release"},"commitlint":{"extends":["@commitlint/config-conventional"]},"husky":{"hooks":{"commit-msg":"commitlint -E HUSKY_GIT_PARAM"}},"mocha":{"spec":"./out/test","timeout":20000,"slow":1000,"retries":4},"nyc":{"all":true,"include":["out/**/*.*","src/**/*.*"],"exclude":["out/test/**/*.*"]},"main":"./out/extension.js","activationEvents":["onDebugResolve:php","onCommand:php.debug.debugPhpFile"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"%workspaceTrust%","restrictedConfigurations":["php.debug.executablePath"]}},"contributes":{"breakpoints":[{"language":"php"}],"debuggers":[{"type":"php","languages":["php"],"label":"PHP","program":"./out/phpDebug.js","runtime":"node","configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"externalConsole":{"type":"boolean","description":"Launch debug target in external console.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceRoot}"},"runtimeExecutable":{"type":"string","description":"Absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.","default":"php"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"hostname":{"type":"string","description":"Address to bind to when listening for Xdebug","default":"::"},"port":{"type":"number","description":"Port on which to listen for Xdebug","default":9003},"serverSourceRoot":{"type":"string","description":"Deprecated: The source root when debugging a remote host","deprecationMessage":"Property serverSourceRoot is deprecated, please use pathMappings to define a server root."},"localSourceRoot":{"type":"string","description":"Deprecated: The source root on this machine that is the equivalent to the serverSourceRoot on the server.","deprecationMessage":"Property localSourceRoot is deprecated, please use pathMappings to define a local root."},"pathMappings":{"type":"object","default":{},"description":"A mapping of server paths to local paths."},"ignore":{"type":"array","items":"string","description":"Array of glob patterns that errors should be ignored from","default":["**/vendor/**/*.php"]},"log":{"type":"boolean","description":"If true, will log all communication between VS Code and the adapter"},"proxy":{"type":"object","properties":{"allowMultipleSessions":{"type":"boolean","description":"If the proxy should expect multiple sessions/connections or not.","default":true},"enable":{"type":"boolean","description":"Whether to enable usage of a proxy","default":false},"host":{"type":"string","description":"Selects the host where the debug client is running, you can either use a host name, IP address, or 'unix:///path/to/sock' for a Unix domain socket. This setting is ignored if xdebug.remote_connect_back is enabled.","default":"127.0.0.1"},"key":{"type":"string","description":"A unique key that allows the proxy to match requests to your editor","default":"${config:php.debug.ideKey}"},"port":{"type":"number","description":"The port where the adapter will register with the the proxy.","default":9001},"timeout":{"type":"number","description":"The port where the adapter will register with the the proxy.","default":3000}}},"xdebugSettings":{"type":"object","properties":{"max_children":{"type":"integer","description":"max number of array or object children to initially retrieve"},"max_data":{"type":"integer","description":"max amount of variable data to initially retrieve"},"max_depth":{"type":"integer","description":"maximum depth that the debugger engine may return when sending arrays, hashes or object structures to the IDE"},"show_hidden":{"enum":[0,1],"description":"This feature can get set by the IDE if it wants to have more detailed internal information on properties (eg. private members of classes, etc.) Zero means that hidden members are not shown to the IDE"}},"description":"Overrides for Xdebug remote debugging settings. See https://xdebug.org/docs-dbgp.php#feature-names","default":{}},"maxConnections":{"type":"number","description":"The maximum allowed parallel debugging sessions","default":0}}}},"initialConfigurations":[{"name":"Listen for Xdebug","type":"php","request":"launch","port":9003},{"name":"Launch currently open script","type":"php","request":"launch","program":"${file}","cwd":"${fileDirname}","port":0,"runtimeArgs":["-dxdebug.start_with_request=yes"],"env":{"XDEBUG_MODE":"debug,develop","XDEBUG_CONFIG":"client_port=${port}"}},{"name":"Launch Built-in web server","type":"php","request":"launch","runtimeArgs":["-dxdebug.mode=debug","-dxdebug.start_with_request=yes","-S","localhost:0"],"program":"","cwd":"${workspaceRoot}","port":9003,"serverReadyAction":{"pattern":"Development Server \\(http://localhost:([0-9]+)\\) started","uriFormat":"http://localhost:%s","action":"openExternally"}}],"configurationSnippets":[{"label":"PHP: Listen for Xdebug","description":"Listen for incoming XDebug connections","body":{"name":"Listen for Xdebug","type":"php","request":"launch","port":9003}},{"label":"PHP: Listen for Xdebug 2 (Legacy)","description":"Listen for incoming XDebug connections on legacy port","body":{"name":"Listen for Xdebug 2 (Legacy)","type":"php","request":"launch","port":9000}},{"label":"PHP: Launch currently open script","description":"Debug the currently open PHP script in CLI mode","body":{"name":"Launch currently open script","type":"php","request":"launch","program":"^\"${1:\\${file\\}}\"","cwd":"^\"${2:\\${fileDirname\\}}\"","port":0,"runtimeArgs":["-dxdebug.start_with_request=yes"],"env":{"XDEBUG_MODE":"debug,develop","XDEBUG_CONFIG":"^\"client_port=\\${port\\}\""}}},{"label":"PHP: Launch currently open script with Xdebug 2 (Legacy)","description":"Debug the currently open PHP script in CLI mode","body":{"name":"Launch currently open script with Xdebug 2 (Legacy)","type":"php","request":"launch","program":"^\"${1:\\${file\\}}\"","cwd":"^\"${2:\\${fileDirname\\}}\"","port":0,"runtimeArgs":["-dxdebug.remote_enable=yes","-dxdebug.remote_autostart=yes"],"env":{"XDEBUG_CONFIG":"^\"remote_port=\\${port\\}\""}}},{"label":"PHP: Launch Built-in web server","description":"Start built-in PHP web server and open browser on debug start","body":{"name":"Launch Built-in web server","type":"php","request":"launch","runtimeArgs":["-dxdebug.mode=debug","-dxdebug.start_with_request=yes","-S","localhost:${1:0}"],"program":"","cwd":"^\"${2:\\${workspaceRoot\\}}\"","port":9003,"serverReadyAction":{"pattern":"Development Server \\\\(http://localhost:([0-9]+)\\\\) started","uriFormat":"http://localhost:%s","action":"openExternally"}}}]}],"configuration":{"title":"PHP Debug","properties":{"php.debug.executablePath":{"type":["string","null"],"default":null,"description":"The path to a PHP executable.","scope":"machine-overridable"},"php.debug.ideKey":{"type":"string","default":"vsc","description":"A unique key that allows the proxy to match requests to your editor. Only used when proxy configuration includes replacement.","scope":"machine-overridable"}}},"menus":{"editor/title/run":[{"command":"php.debug.debugPhpFile","when":"resourceLangId == php && !inDiffEditor"}]},"commands":[{"command":"php.debug.debugPhpFile","title":"Debug PHP","icon":"$(debug-alt-small)","enablement":"resourceLangId == php"}]}},"location":{"$mid":1,"path":"/var/www/html/extensions/felixfbecker.php-debug-1.22.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"felixfbecker","metadata":{"installedTimestamp":1732859439097,"pinned":false,"source":"gallery","id":"60b4ad61-eb2a-47f3-b361-aa84fb4288ac","publisherId":"2bbbc574-aea7-4866-8f36-2d56ef365f8c","publisherDisplayName":"felixfbecker","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"neilbrayfield.php-docblocker","uuid":"ca0094fa-0dc7-4847-ae5d-879442c099ca"},"manifest":{"name":"php-docblocker","displayName":"PHP DocBlocker","description":"A simple, dependency free PHP specific DocBlocking package","version":"2.7.0","license":"MIT","publisher":"neilbrayfield","author":"Neil Brayfield <dev@brayfield.uk>","engines":{"vscode":"^1.60.0"},"categories":["Programming Languages"],"keywords":["php","autocomplete","docblock"],"activationEvents":["onLanguage:php","onLanguage:hack"],"repository":{"type":"git","url":"https://github.com/neild3r/vscode-php-docblocker.git"},"bugs":{"url":"https://github.com/neild3r/vscode-php-docblocker/issues"},"capabilities":{"untrustedWorkspaces":{"supported":true}},"extensionKind":["workspace","ui"],"icon":"images/logo.png","browser":"./out/src/extension.js","main":"./out/src/extension.js","contributes":{"commands":[{"command":"php-docblocker.trigger","title":"Insert PHP Docblock"}],"configuration":{"type":"object","title":"PHP DocBlocker","properties":{"php-docblocker.gap":{"type":"boolean","default":true,"description":"If there should be a gap between the description and tags"},"php-docblocker.returnGap":{"type":"boolean","default":false,"description":"If there should be a gap between params and return"},"php-docblocker.defaultType":{"type":"string","default":"[type]","description":"Default type to use if a type wasn't able to be detected"},"php-docblocker.returnVoid":{"type":"boolean","default":true,"description":"Should we return void if there is no detectable return type?"},"php-docblocker.extra":{"type":"array","default":[],"description":"Extra tags you wish to include in every DocBlock"},"php-docblocker.useShortNames":{"type":"boolean","default":false,"description":"Whether you want to use int instead of integer and bool instead of boolean."},"php-docblocker.qualifyClassNames":{"type":"boolean","default":false,"description":"Fully qualifies any data types used in param and returns by reading the namespaces."},"php-docblocker.alignParams":{"type":"boolean","default":false,"description":"Vertically aligns param types and names with additional spaces."},"php-docblocker.alignReturn":{"type":"boolean","default":false,"description":"Vertically aligns return with above param statements."},"php-docblocker.varDescription":{"type":["string","boolean"],"default":false,"description":"Include a description placeholder for @var tags"},"php-docblocker.paramDescription":{"type":["string","boolean"],"default":false,"description":"Include a description placeholder for @param tags"},"php-docblocker.returnDescription":{"type":["string","boolean"],"default":false,"description":"Include a description placeholder for @return tags"},"php-docblocker.functionTemplate":{"type":"object","default":null,"description":"Specify the default template for functions."},"php-docblocker.propertyTemplate":{"type":"object","default":null,"description":"Specify the default template for class variables."},"php-docblocker.classTemplate":{"type":"object","default":null,"description":"Specify the default template for classes."},"php-docblocker.author":{"type":"object","default":{"name":"Name","email":"email@email.com"},"description":"Default author tag"}}}},"scripts":{"clean":"rm -rf ./coverage/* ./.nyc_output ./out","verify-pat":"vsce verify-pat","vscode:prepublish":"npm run -S esbuild-base -- --minify","lint":"tslint -p ./","build":"npm run -S esbuild-base -- --sourcemap","watch":"tsc -watch -p ./","pretest":"tsc -p ./","preversion":"tsc -p ./","version":"node ./out/scripts/updateChangelog.js","test":"node ./out/test/runTest.js","web":"npm run build && vscode-test-web --browserType=webkit --extensionDevelopmentPath=./","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","package":"vsce package --out ./out/package.vsix","publish":"vsce publish --packagePath ./out/package.vsix","deploy":"npm run package && npm run publish"},"devDependencies":{"@types/mocha":"^5.2.6","@types/node":"^6.14.13","@types/vscode":"^1.60.0","@vscode/test-web":"^0.0.7","coveralls":"^3.1.1","esbuild":"^0.12.29","markdown-table-ts":"^1.0.3","mocha":"^9.1.1","nyc":"^15.1.0","typescript":"^3.9.10","vsce":"^1.100.0","vscode-test":"^1.6.1"},"dependencies":{}},"location":{"$mid":1,"path":"/var/www/html/extensions/neilbrayfield.php-docblocker-2.7.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"neilbrayfield","metadata":{"installedTimestamp":1732859442999,"pinned":false,"source":"gallery","id":"ca0094fa-0dc7-4847-ae5d-879442c099ca","publisherId":"c57feae1-b54d-4743-8628-84a9d0363b8e","publisherDisplayName":"neilbrayfield","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"felixfbecker.php-intellisense","uuid":"5e69f001-f945-4c97-baf0-320d82a153b3"},"manifest":{"name":"php-intellisense","displayName":"PHP IntelliSense","description":"Advanced Autocompletion and Refactoring support for PHP","publisher":"felixfbecker","author":"Felix Becker <felix.b@outlook.com>","license":"MIT","private":true,"preview":false,"version":"2.3.14","engines":{"vscode":"^1.26.1"},"keywords":["php","intellisense","autocompletion","help","refactor"],"categories":["Programming Languages"],"icon":"images/logo.png","galleryBanner":{"color":"#6682BA","theme":"dark"},"repository":{"type":"git","url":"https://github.com/felixfbecker/vscode-php-intellisense.git"},"bugs":{"url":"https://github.com/felixfbecker/php-language-server/issues"},"activationEvents":["onLanguage:php","workspaceContains:**/*.php"],"main":"./out/extension","husky":{"hooks":{"commit-msg":"commitlint -e $HUSKY_GIT_PARAMS"}},"scripts":{"build":"tsc -p .","watch":"tsc -w -p .","postinstall":"node ./node_modules/vscode/bin/install","lint":"npm run prettier && npm run tslint","tslint":"tslint -p tsconfig.json -c tslint.json \"src/**/*.ts\"","prettier":"prettier '**/{*.{js?(on),ts,yml},.*.js?(on),.*.yml,.prettierrc,*.md}' --write --list-different","semantic-release":"semantic-release"},"devDependencies":{"@commitlint/cli":"7.2.1","@commitlint/config-conventional":"7.1.2","@types/execa":"0.9.0","@types/mocha":"5.2.7","@types/mz":"0.0.32","@types/node":"8.10.29","@types/semver":"6.2.0","husky":"1.1.3","prettier":"1.15.3","semantic-release":"15.10.8","semantic-release-vsce":"2.1.2","tslint":"5.11.0","tslint-config-prettier":"1.15.0","typescript":"3.1.6","vscode":"1.1.21"},"dependencies":{"execa":"1.0.0","mz":"2.7.0","semver":"6.3.0","vscode-languageclient":"5.1.1"},"commitlint":{"extends":["@commitlint/config-conventional"]},"release":{"verifyConditions":["semantic-release-vsce","@semantic-release/github"],"prepare":{"path":"semantic-release-vsce","packageVsix":"php-intellisense.vsix"},"publish":["semantic-release-vsce",{"path":"@semantic-release/github","assets":"php-intellisense.vsix"}]},"contributes":{"configuration":{"type":"object","title":"PHP IntelliSense","properties":{"php.memoryLimit":{"type":"string","default":"4095M","description":"The memory limit of the php language server. [Number][K|M|G]. Use '-1' to allow unlimited use of the RAM (default is 4G).","pattern":"^\\d+[KMG]?$"},"php.executablePath":{"type":["string","null"],"default":null,"description":"The path to a PHP 7+ executable."}}}}},"location":{"$mid":1,"path":"/var/www/html/extensions/felixfbecker.php-intellisense-2.3.14-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"felixfbecker","metadata":{"installedTimestamp":1732859448976,"pinned":false,"source":"gallery","id":"5e69f001-f945-4c97-baf0-320d82a153b3","publisherId":"2bbbc574-aea7-4866-8f36-2d56ef365f8c","publisherDisplayName":"felixfbecker","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"felixfbecker.php-pack","uuid":"1a9300c9-36a6-44d1-9d09-ada3641b8727"},"manifest":{"name":"php-pack","displayName":"PHP Extension Pack","description":"Everything you need for PHP development","version":"1.0.2","publisher":"felixfbecker","engines":{"vscode":"^1.26.0"},"categories":["Other","Extension Packs"],"galleryBanner":{"color":"#6682BA","theme":"dark"},"icon":"logo.png","homepage":"https://github.com/felixfbecker/vscode-php-pack/blob/master/README.md","bugs":{"url":"https://github.com/felixfbecker/vscode-php-pack/issues"},"license":"MIT","repository":{"type":"git","url":"https://github.com/felixfbecker/vscode-php-pack"},"extensionPack":["felixfbecker.php-debug","felixfbecker.php-intellisense"]},"location":{"$mid":1,"path":"/var/www/html/extensions/felixfbecker.php-pack-1.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"felixfbecker","metadata":{"installedTimestamp":1732859454314,"pinned":false,"source":"gallery","id":"1a9300c9-36a6-44d1-9d09-ada3641b8727","publisherId":"2bbbc574-aea7-4866-8f36-2d56ef365f8c","publisherDisplayName":"felixfbecker","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"valeryanm.vscode-phpsab","uuid":"f9767fa9-e73a-4813-98d4-f552755a0d08"},"manifest":{"name":"vscode-phpsab","displayName":"PHP Sniffer & Beautifier","description":"PHP Sniffer & Beautifier for Visual Studio Code","version":"0.0.20","icon":"php_logo.png","publisher":"valeryanm","homepage":"https://github.com/valeryan/vscode-phpsab","license":"MIT","repository":{"type":"git","url":"https://github.com/valeryan/vscode-phpsab.git"},"bugs":{"url":"https://github.com/valeryan/vscode-phpsab/issues"},"engines":{"vscode":"^1.86.0"},"categories":["Formatters","Linters","Other"],"keywords":["php","phpcs","phpcbf","linter","fixer"],"activationEvents":["onLanguage:php"],"main":"./out/main.js","contributes":{"commands":[{"command":"fixer.fix","title":"PHPCBF: Fix this file","when":"!inOutput && editorFocus && editorLangId == php"}],"configuration":{"title":"PHP Sniffer & Fixer Configuration options","type":"object","properties":{"phpsab.fixerEnable":{"scope":"resource","type":"boolean","default":true,"description":"Control if this fixer is enabled for PHP files or not."},"phpsab.fixerArguments":{"scope":"resource","type":"array","default":[],"description":"Additional arguments passed to phpcbf"},"phpsab.executablePathCBF":{"scope":"resource","type":"string","default":null,"description":"Optional. The default path to the phpcbf executable. Can be overridden if auto search is enabled."},"phpsab.executablePathCS":{"scope":"resource","type":"string","default":null,"description":"Optional. The default path to the phpcs executable. Can be overridden if auto search is enabled."},"phpsab.composerJsonPath":{"scope":"resource","type":"string","default":"composer.json","description":"The path to composer.json"},"phpsab.standard":{"scope":"resource","type":["string","null"],"default":null,"description":"Optional. The default config to use or global standard. Can be overridden if auto search is enabled."},"phpsab.autoRulesetSearch":{"scope":"resource","type":"boolean","default":true,"description":"Automatically search for a ruleset file to use as configuration. Overrides custom standards defined above."},"phpsab.allowedAutoRulesets":{"scope":"resource","type":"array","default":[".phpcs.xml",".phpcs.xml.dist","phpcs.xml","phpcs.xml.dist","phpcs.ruleset.xml","ruleset.xml"],"description":"Filenames to search for that contain the ruleset for fixers."},"phpsab.snifferEnable":{"scope":"resource","type":"boolean","default":true,"description":"Control if this sniffer is enabled for PHP files or not."},"phpsab.snifferArguments":{"scope":"resource","type":"array","default":[],"description":"Additional arguments passed to phpcs"},"phpsab.snifferMode":{"type":"string","default":"onSave","enum":["onSave","onType"],"markdownDescription":"When to run `phpcs`."},"phpsab.snifferTypeDelay":{"type":"number","default":250,"minimum":0,"markdownDescription":"When `phpsab.snifferMode` is `onType`, this sets the amount of milliseconds the validator will wait after typing has stopped before it will run."},"phpsab.snifferShowSources":{"type":"boolean","default":false,"description":"Control if phpcs report should include sniff sources."},"phpsab.debug":{"type":"boolean","default":false,"description":"Write debug info to the console"}}}},"scripts":{"compile":"rimraf out && tsc -p ./","vscode:prepublish":"npm run esbuild-base -- --minify","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node","esbuild":"npm run esbuild-base -- --sourcemap","esbuild-watch":"npm run esbuild-base -- --sourcemap --watch","lint":"eslint src --ext ts","pretest":"npm run compile && npm run lint","test":"vscode-test"},"dependencies":{"cross-spawn":"^7.0.3","lodash":"^4.17.21"},"devDependencies":{"@types/cross-spawn":"^6.0.6","@types/lodash":"^4.14.202","@types/mocha":"^10.0.6","@types/node":"^20.11.20","@types/sinon":"^17.0.3","@types/vscode":"^1.86.0","@typescript-eslint/eslint-plugin":"^7.0.2","@typescript-eslint/parser":"^7.0.2","@vscode/test-cli":"^0.0.6","@vscode/test-electron":"^2.3.9","commitizen":"^4.3.0","cz-conventional-changelog":"^3.3.0","esbuild":"^0.20.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.1.3","prettier-plugin-organize-imports":"^3.2.4","rimraf":"^5.0.5","sinon":"^17.0.1","ts-loader":"^9.5.1","typescript":"^5.3.3"},"config":{"commitizen":{"path":"./node_modules/cz-conventional-changelog"}}},"location":{"$mid":1,"path":"/var/www/html/extensions/valeryanm.vscode-phpsab-0.0.20-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ValeryanM","metadata":{"installedTimestamp":1732859465795,"pinned":false,"source":"gallery","id":"f9767fa9-e73a-4813-98d4-f552755a0d08","publisherId":"4272c691-c0a3-45b5-92ac-e3700f117955","publisherDisplayName":"ValeryanM","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]}]}